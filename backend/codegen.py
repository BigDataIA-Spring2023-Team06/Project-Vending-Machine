from github import Github
import os
import json
import time
import openai
import nbformat
from nbformat.v4 import new_notebook, new_code_cell


openai.api_key = "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"
g = Github("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")
user_git = g.get_user()



###Function to create repo########

def create_repo(repo_name, description, user=user_git):
    timestamp = int(time.time())
    try:
        user.create_repo(f"{repo_name}-{timestamp}", description=description)
        return f"https://github.com/project-vending/{repo_name}-{timestamp}"
    except:
        return "Repo Creatrion Failed"


###Function to create ipynb########
def get_ipynb(link,columns):
    query= f"""{{"Dataset Link": "{link}",
                "columns of the dataset": "{columns}",
                "prompt":"write code to Do eda on this dataset with check for nulls, plots, distribution etc. Also add a comment for  each code block so I can split the code into a Jupyter notebook"}}"""
    
    response =  openai.ChatCompletion.create(
        model = "gpt-3.5-turbo", 
        messages = [
            {"role" : "user", "content" : query }
        ]
    )
    response= response["choices"][0]["message"]["content"]

    #Break response into a list of code blocks by the # separator without removing the separator
    code_blocks = response.split('#')

    #Add # to the beginning of each code block
    code_blocks = ['#' + code_block for code_block in code_blocks]

    # Create a new notebook
    notebook = new_notebook()

    for code in code_blocks:
        cell = new_code_cell(code)
        notebook['cells'].append(cell)

    # Save the notebook to a file
    nbformat.write(notebook, 'EDA.ipynb')

    
    #Return the notebook
    return notebook


### Function to push the notebook###
def push_notebook(repo_name, message, notebook, filename): 
    timestamp = str(time.time())
    notebook = json.dumps(notebook)
    repo = user_git.get_repo(repo_name)
    repo.create_file(f"{filename}.ipynb", message, notebook)
    
    
jd = '''Required:
Bachelor's degree required
Must be legally authorized to work in the United States without the need for employer sponsorship, now or at any time in the future
Must have Active Top Secret Clearance or Higher
4+ years of experience in data engineering, data management and transformation experience
3+ years of experience with Extract, Transform, Load (ETL)
1 year of experience with cloud technologies
Preferred:
Database administration and development experience will be a plus for consideration.
Experience with AWS ETL Glue and/or OpenSearch AWS service
Keen interest in learning and using the latest software tools, methods, and technologies to solve real world problem sets vital to national security'''

query = f"Can you provide me 1 complete personal project that I can add to my resume and the code can be generated by you for the job description: {jd}. Give the response in this json format "

response =  openai.ChatCompletion.create(
        model = "gpt-3.5-turbo", 
        messages = [
            {"role" : "user", "content" : query }
        ]
    )
print(response["choices"][0]["message"]["content"])


    
    
# # link = create_repo("testing-push-notebook", "This is the first functional test", user) 
# notebook = get_ipynb("https://raw.githubusercontent.com/midhunmohank/INFO6105/main/advertising.csv","TV,Radio,Newspaper,Sales")
# # print(link)
# push_notebook("testing-push-notebook", "News Paper EDA", notebook, "john")






